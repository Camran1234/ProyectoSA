name: SA_Project CI

on:
  pull_request:
    branches:
      - release

jobs:
  build_stage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - 21.7.0
        java-version:
          - 17

    steps:
      - name: Checkout and copy code to workflow
        uses: actions/checkout@v2

      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      #  Configurar microservicios
      - name: Install and Build Microservice frontend
        run: |
          cd ProyectoSA_frontend/
          npm install

      - name: Install and Build Microservice tickets
        run: |
          cd ProyectoSA_backend/
          mvn clean install -U
          mvn clean package
          mvn clean test jacoco:report
    
      - name: Publish JaCoCo report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: ProyectoSA_backend/target/site/jacoco

  delivery-stage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version:
          - 21.7.0        
        java-version:
          - 17

    env:
      REGION_REGISTRY: us-central1-docker.pkg.dev
      PROJECT_ID: proyectosa-415901
      REPOSITORY: docker-repository
      ENVIRONMENT: production
      
    steps:
      # Copy code
      - name: Checkout and copy code to workflow
        uses: actions/checkout@v2

      # Configure Nodejs and JVM
      - name: Configure Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
      
      # Configurar credenciales de Google Cloud Platform
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # TAG
      # Permisos
      - name: Set execute permissions for script
        run: chmod +x ./scripts/git_update.sh

      # Configurar Tags automaticamente
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          ./scripts/git_update.sh -v major        
        shell: bash

      # Debug Tag
      - name: Debug Git Tag
        run: |
          echo "Git Tag: <${{ steps.increment-git-tag.outputs.git-tag }}>"      

      # Configurar Docker con autenticaciÃ³n de Google Cloud
      - name: Configure Docker
        run: |
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $REGION_REGISTRY --quiet
          
      # Configurar .env frontend
      - name: Configure frontend environment variables
        run: |        
          cd ProyectoSA_frontend/
          echo "${{ secrets.PRODUCTION_ENVIRONMENT }}" >> .env    

      # Configurar dockers
      - name: Push Docker Image to Artifact Registry MySQL Service
        env: 
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_NAME_MS: mysql_microservice
          DIRECTORY: Documentation/    
        run: |
          bash scripts/build_and_push_image.sh --environment="$ENVIRONMENT" --directory="$DIRECTORY" --region="$REGION_REGISTRY" --project_id="$PROJECT_ID" --repository="$REPOSITORY" --image_name="$IMAGE_NAME_MS" --tag="$GIT_TAG" 

      - name: Push Docker Image to Artifact Registry Microservice Frontend
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_NAME_MS: node_microservice_frontend      
          DIRECTORY: ProyectoSA_frontend/ 
        run: |
          bash scripts/build_and_push_image.sh --environment="$ENVIRONMENT" --directory="$DIRECTORY" --region="$REGION_REGISTRY" --project_id="$PROJECT_ID" --repository="$REPOSITORY" --image_name="$IMAGE_NAME_MS" --tag="$GIT_TAG" 

      - name: Push Docker Image to Artifact Registry Microservice Ticket
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_NAME_MS: maven_microservice_ticket
          DIRECTORY: ProyectoSA_backend/ 
        run: |
          bash scripts/build_and_push_image.sh --environment="$ENVIRONMENT" --directory="$DIRECTORY" --region="$REGION_REGISTRY" --project_id="$PROJECT_ID" --repository="$REPOSITORY" --image_name="$IMAGE_NAME_MS" --tag="$GIT_TAG" 
  