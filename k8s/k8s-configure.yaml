apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql-service
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-service
  template:
    metadata:
      labels:
        app: mysql-service
    spec:
      containers:
        - name: mysql-service
          image: ${REPOSITORY}/data_service:${TAG}-${ENVIRONMENT} 
          ports:
            - containerPort: 3306
            
---
apiVersion: v1
kind: Service
metadata:
  name: spring-service
spec:
  selector:
    app: spring-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 33065

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-service
  template:
    metadata:
      labels:
        app: spring-service
    spec:
      containers:
        - name: spring-service
          image: ${REPOSITORY}/maven_microservice_ticket:${TAG}-${ENVIRONMENT}
          ports:
            - containerPort: 33065  # Puerto de tu aplicaci√≥n Spring

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-ingress-ext
  namespace: default
  #annotations:
  #  kubernetes.io/ingress.global-static-ip-name: test-static-ip
spec:
  rules:
    #- host: test-enviroment.ticketsys-asd.xyz
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: spring-service
                port:
                  number: 80
  defaultBackend:
    service:
      name: spring-service
      port:
        number: 80
# status:
#   loadBalancer: {}

          