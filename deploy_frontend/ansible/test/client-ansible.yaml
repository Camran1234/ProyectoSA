# Install Nginx
---
- hosts: clients
  become: True
  become_user: root
  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    #- name: Install kubectl
    #  snap:
    #    name: kubectl
    #    classic: yes    

    #- name: Pass the kubeconfig file to the client
    #  ansible.builtin.copy:
    #    src: "{{ kubespray_conf }}"
    #    dest: /etc/systemd/system/kubespray-do.conf

    #- name: Create systemd unit file for kubectl port-forward
    #  template:
    #    src: "{{ forward_service }}"  # Archivo de plantilla para la unidad systemd
    #    dest: /etc/systemd/system/kubectl-port-forward.service  # Ruta remota donde se colocará el archivo de unidad systemd
    #  notify:
    #    - Restart kubectl-port-forward service

    #- name: Reload systemd daemon
    #  ansible.builtin.systemd:
    #    daemon_reload: yes

    #- name: Start kubectl-port-forward service
    #  systemd:
    #    name: kubectl-port-forward
    #    state: started
    #    enabled: yes

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest   
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Ejecutar un comando con el módulo command
      shell: docker stop $(docker ps -a -q)
      become: true
      ignore_errors: true

    - name: Eliminar Imagenes y Contenedores
      shell: docker system prune -a --force
      become: true
      ignore_errors: true
      
    - name: Pull default Docker image
      community.docker.docker_image:
        name: ${REPOSITORY}/frontend_microservice_ticket:${TAG}-${ENVIRONMENT} 
        source: pull

    - name: ensure a container is running
      docker_container:
        name: "frontend"
        state: started
        image: ${REPOSITORY}/frontend_microservice_ticket:${TAG}-${ENVIRONMENT} 
        pull: true
        ports:
          - "80:5173"
  #handlers:
  #  - name: Restart kubectl-port-forward service
  #    systemd:
  #      name: kubectl-port-forward
  #      state: restarted